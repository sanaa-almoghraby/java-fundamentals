/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab2;

import java.util.ArrayList;
import java.util.Arrays;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static int[] roll(int n) {
        int[] result = new int[n];
//        ArrayList<Integer> number = new ArrayList<>();
        for (int i = 0; i < result.length; i++) {
            int random = (int) Math.ceil(Math.random() * 6);
//            number.add(random);
            result[i]=random;
        }
        System.out.println(Arrays.toString(result)); //print array one method

//            print array second method
            for (int i = 0; i < n; i++){
                System.out.print(result[i] + ", ");
            }


        System.out.println("\n");
            return result ;
    }

    public static boolean containsDuplicates(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return true;
                }
            }
        }

        // no duplicate is found
        return false;
    }

    public static double Average(int[] array) {
        double sum = 0;
        for (int value : array) {
            sum += value;
        }
        return (sum / array.length);
    }


    public static int[] arraysLowestAav(int[][] arr) {

//        ArrayList <Double> avarg = new ArrayList<>();
        double[] avarg = new double[arr.length];

        double finalAv = 0;
        for (int i = 0; i < arr.length; i++) {
            double sum = 0;
            double arrLength = 0;
            for (int j = 0; j < arr[i].length; j++) {

                sum += arr[i][j];
            }
            avarg[i] = sum / arr[i].length;
        }
        finalAv=avarg[0];
        int selectedArr=0;
        for (int i = 1; i < avarg.length; i++) {

            if (avarg[i] < finalAv) {
                finalAv = avarg[i];
                selectedArr=i;
            }

        }
        return arr[selectedArr];
    }


}
